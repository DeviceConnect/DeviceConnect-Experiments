apply plugin: 'com.android.application'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'org.deviceconnect:dconnect-device-plugin-sdk:2.3.1'
    compile 'io.airlift:airline:0.7'

    testCompile 'junit:junit:4.12'
}

repositories {
    maven { url 'https://raw.githubusercontent.com/DeviceConnect/DeviceConnect-Android/master/dConnectSDK/dConnectSDKForAndroid/repository/' }
    maven { url 'https://raw.githubusercontent.com/DeviceConnect/DeviceConnect-Android/master/dConnectDevicePlugin/dConnectDevicePluginSDK/repository/' }
}

android {

    compileSdkVersion 23
    buildToolsVersion '26.0.2'

    def getVersionName = { ->
        def version
        if (System.getProperty('os.name').toLowerCase().contains('windows')) {
            version = ["cmd", "/c", "git describe --tags --long"].execute().in.text.trim()
        } else {
            version = ["sh", "-c", "git describe --tags --long"].execute().in.text.trim()
        }
        version = version.empty ? "2.1.0" : version
        return "${version}"
    }

    defaultConfig {
        applicationId "org.deviceconnect.android.deviceplugin.adb"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName '1.0.0'
    }

    signingConfigs {
        releaseConfig {
            storeFile=file(project.properties.storeFile)
            storePassword=project.properties.storePassword
            keyAlias=project.properties.keyAlias
            keyPassword=project.properties.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.releaseConfig
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

def distRootDir = '../dist'
def distDir = distRootDir + '/dConnectDeviceADB'
task cleanDist(type: Delete) {
    delete distRootDir
}
task assembleDistRelease(dependsOn: ['assembleRelease', 'copyRelease', 'copySource']) {
}
task assembleDistDebug(dependsOn: ['assembleDebug', 'copyDebug', 'copySource']) {
}
task copyRelease(type: Copy) {
    from 'build/outputs/apk'
    into distDir
    include '**/plugin-release.apk'
    rename 'plugin-release.apk', 'dConnectDeviceADB.apk'
}
task copyDebug(type: Copy) {
    from 'build/outputs/apk'
    into distDir
    include '**/plugin-debug.apk'
    rename 'plugin-debug.apk', 'dConnectDeviceADB-debug.apk'
}
task copySource(type: Copy) {
    from '../'
    into distDir + '/src/dConnectDeviceADB'
    exclude '**/build/**/*'
    exclude '**/dist/**/*'
    exclude '**/gradle.properties'
    exclude '**/local.properties'
    exclude '**/*.apk'
    includeEmptyDirs false
    rename 'gradle-default.properties', 'gradle.properties'
}